import org.opencv.core.Core;
import org.opencv.core.CvType;
import org.opencv.core.Mat;

	import org.opencv.core.Core;
	import org.opencv.core.Mat;
	import org.opencv.core.MatOfRect;
	import org.opencv.core.Point;
	import org.opencv.core.Rect;
	import org.opencv.core.Scalar;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.core.*;
	 // imread, imwrite, etc

	import org.opencv.objdetect.CascadeClassifier;

	//
	// Detects faces in an image, draws boxes around them, and writes the results
	// to "faceDetection.png".
	//
	
	class DetectFaceDemo {
	  public void run() {
	    System.out.println("\nRunning DetectFaceDemo");

	    // Create a face detector from the cascade file in the resources
	    // directory.
	    
	    String lbpcascadesFilePath = getClass().getResource("/lbpcascade_frontalface.xml").getPath();
	 // The fiel path you got is like /E:/Programmer/EclipseWorkspace/JavaProject/TestOpenCV/bin/lbpcascade_frontalface.xml
	 System.out.println(lbpcascadesFilePath); 
	 // trim first '/', or the file cannot be read in Windows.
	 lbpcascadesFilePath = lbpcascadesFilePath.substring(1);
	 // Then it is OK to load the file.
	 CascadeClassifier faceDetector = new CascadeClassifier(lbpcascadesFilePath);
	    
	    
	    //CascadeClassifier faceDetector = new CascadeClassifier(getClass().getResource("C:\\Users\\Rohan\\Desktop\\openCVTestBed\\lbpcascade_frontalface.xml").getPath());
	    System.out.println("Passed xml");
	    
	    String imgFilePath = getClass().getResource("/lena.png").getPath();
	    System.out.println(imgFilePath); // like /E:/Programmer/EclipseWorkspace/JavaProject/TestOpenCV/bin/lena.png
	    imgFilePath = imgFilePath.substring(1);  // trim first "/", or the file cannot be read in Windows.
	    Mat image = Imgcodecs.imread(imgFilePath);
	    
	    
	   // Mat image = Imgcodecs.imread(getClass().getResource("C:\\Users\\Rohan\\Desktop\\openCVTestBed\\lena.png").getPath());
	    System.out.println("passed picture to code");
	    // Detect faces in the image.
	    // MatOfRect is a special container class for Rect.
	    MatOfRect faceDetections = new MatOfRect();
	    faceDetector.detectMultiScale(image, faceDetections);

	    System.out.println(String.format("Detected %s faces", faceDetections.toArray().length));

	    // Draw a bounding box around each face.
	    for (Rect rect : faceDetections.toArray()) {
	    	Imgproc.rectangle(image, new Point(rect.x, rect.y), new Point(rect.x + rect.width, rect.y + rect.height), new Scalar(0, 255, 0));
	    }

	    // Save the visualized detection.
	    String filename = "faceDetectionofLenaOutput.bmp"; //C:\Users\Rohan\workspace\OpenCVFacialRecognition\faceDetectionOutput.bmp
	    System.out.println(String.format("Writing %s", filename));
	    Imgcodecs.imwrite(filename, image);
	  }
	}

	public class openCVFacialRecognition {
	  public static void main(String[] args) {
	    System.out.println("Hello, OpenCV");

	    // Load the native library.
	    System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
	    new DetectFaceDemo().run();
	  }
	}
